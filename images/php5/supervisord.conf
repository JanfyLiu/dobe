[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)
;chmod=0700                 ; socket 文件的 mode，默认是 0700
;chown=nobody:nogroup       ; socket 文件的 owner，格式： uid:gid

[inet_http_server]         ; HTTP 服务器，提供 web 管理界面
port=127.0.0.1:8001        ; Web 管理后台运行的 IP 和端口，如果开放到公网，需要注意安全性
username=user              ; 登录管理后台的用户名
password=123               ; 登录管理后台的密码

[supervisord]
logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=true               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

; 包含其他的配置文件
[include]
; files = /etc/supervisor/conf.d/*.conf    ; 可以是 *.conf 或 *.ini

[eventlistener:stdout]
command = supervisor_stdout
buffer_size = 100
events = PROCESS_LOG
result_handler = supervisor_stdout:event_handler

; [program:usercenter]
; directory = /home/leon/projects/usercenter ; 程序的启动目录
; command = gunicorn -c gunicorn.py wsgi:app  ; 启动命令，可以看出与手动在命令行启动的命令是一样的
; autostart = true     ; 在 supervisord 启动的时候也自动启动
; startsecs = 5        ; 启动 5 秒后没有异常退出，就当作已经正常启动了
; autorestart = true   ; 程序异常退出后自动重启
; startretries = 3     ; 启动失败自动重试次数，默认是 3
; user = leon          ; 用哪个用户启动
; redirect_stderr = true  ; 把 stderr 重定向到 stdout，默认 false
; stdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB
; stdout_logfile_backups = 20     ; stdout 日志文件备份数
; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录（supervisord 会自动创建日志文件）
; stdout_logfile = /data/logs/usercenter_stdout.log
; 可以通过 environment 来添加需要的环境变量，一种常见的用法是修改 PYTHONPATH
; environment=PYTHONPATH=$PYTHONPATH:/path/to/somewhere

[program:sshd]
command=/usr/sbin/sshd -D


[program:httpd]
directory=/opt/youzan/scrm-web
command=php bin/httpd
autostart=true
autorestart=true
startsecs=5
startretries=3
user=www-data
stdout_logfile=/var/log/httpd_stdout.log

[program:laravel-worker]
process_name=%(program_name)s_%(process_num)02d
command=php /opt/inc/forme/artisan queue:work --sleep=3 --tries=3 --daemon
autostart=true
autorestart=true
user=www-data
numprocs=8
redirect_stderr=true
stdout_logfile=/var/log/php/worker.log
