FROM debian:jessie

# Install env
COPY ./pkg/* /tmp/

RUN cp /tmp/sources.list /etc/apt/sources.list

# phpize deps
RUN apt-get update && apt-get install -y \
		autoconf \
		file \
		g++ \
		gcc \
		libc-dev \
		make \
		pkg-config \
		re2c \
	--no-install-recommends && rm -r /var/lib/apt/lists/*

# persistent / runtime deps
RUN apt-get update && apt-get install -y \
		ca-certificates \
        curl \
		libedit2 \
		libsqlite3-0 \
		libxml2 \
	--no-install-recommends && rm -r /var/lib/apt/lists/*

# deps
RUN apt-get update && apt-get install -y \
        wget \
        git \
        vim \
        sqlite3 \
        php5-curl \
        graphviz\
        imagemagick \
        graphicsmagick \
        libgearman-dev \
        libmemcached-dev \
        libmcrypt-dev \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libpq-dev \
        libsqlite3-dev \
        libpng12-dev \
        libicu-dev \
#        libmysqld-dev \
        libmysqlclient-dev \
        supervisor \
        nodejs \
    --no-install-recommends && rm -r /var/lib/apt/lists/*

ENV PHP_INI_DIR /usr/local/etc/php
RUN mkdir -p $PHP_INI_DIR/conf.d

##<autogenerated>##
ENV PHP_EXTRA_CONFIGURE_ARGS --enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data
##</autogenerated>##

ENV GPG_KEYS 0BD78B5F97500D450838F95DFE857D9A90D90EC1 6E4F6AB321FDC07F2C332E3AC2BF0BC433CFC8B3

ENV PHP_VERSION 5.6.21
ENV PHP_FILENAME php-5.6.21.tar.xz
ENV PHP_SHA256 566ff1a486cb0485ed477a91ea292423f77a58671270ff73b74e67e3ce7084f9

RUN set -xe \
	&& buildDeps=" \
		$PHP_EXTRA_BUILD_DEPS \
		libcurl4-openssl-dev \
		libedit-dev \
		libsqlite3-dev \
		libssl-dev \
		libxml2-dev \
		xz-utils \
	" \
	&& apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \
	&& curl -fSL "http://php.net/get/$PHP_FILENAME/from/this/mirror" -o "$PHP_FILENAME" \
	&& echo "$PHP_SHA256 *$PHP_FILENAME" | sha256sum -c - \
	&& curl -fSL "http://php.net/get/$PHP_FILENAME.asc/from/this/mirror" -o "$PHP_FILENAME.asc" \
	&& export GNUPGHOME="$(mktemp -d)" \
	&& for key in $GPG_KEYS; do \
		gpg --keyserver ha.pool.sks-keyservers.net --recv-keys "$key"; \
	done \
	&& gpg --batch --verify "$PHP_FILENAME.asc" "$PHP_FILENAME" \
	&& rm -r "$GNUPGHOME" "$PHP_FILENAME.asc" \
	&& mkdir -p /usr/src/php \
	&& tar -xf "$PHP_FILENAME" -C /usr/src/php --strip-components=1 \
	&& rm "$PHP_FILENAME" \
	&& cd /usr/src/php \
	&& ./configure \
		--with-config-file-path="$PHP_INI_DIR" \
		--with-config-file-scan-dir="$PHP_INI_DIR/conf.d" \
		$PHP_EXTRA_CONFIGURE_ARGS \
		--disable-cgi \
# --enable-mysqlnd is included here because it's harder to compile after the fact than extensions are (since it's a plugin for several extensions, not an extension in itself)
		--enable-mysqlnd \
# --enable-mbstring is included here because otherwise there's no way to get pecl to use it properly (see https://github.com/docker-library/php/issues/195)
        --enable-mbstring \
        --enable-sockets \
        --enable-pcntl \
        --enable-bcmath \
        --enable-opcache \
        --enable-tokenizer \
        --enable-sysvmsg \
        --enable-sysvsem  \
        --enable-sysvshm \
        --enable-shmop \
        --enable-zip \
        --enable-ftp \
        --enable-soap \
        --enable-xml \
        --with-iconv \
        --with-mcrypt \
        --with-gd \
        --with-mysqli \
        --with-pdo-mysql \
		--with-curl \
		--with-libedit \
        --with-readline \
		--with-openssl \
		--with-zlib \
        --with-freetype-dir \
        --with-jpeg-dir \
        --with-png-dir \
	&& make -j"$(nproc)" \
	&& make install \
	&& { find /usr/local/bin /usr/local/sbin -type f -executable -exec strip --strip-all '{}' + || true; } \
	&& make clean
#	&& apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false -o APT::AutoRemove::SuggestsImportant=false $buildDeps

RUN set -ex \
	&& cd /usr/local/etc \
	&& if [ -d php-fpm.d ]; then \
		# for some reason, upstream's php-fpm.conf.default has "include=NONE/etc/php-fpm.d/*.conf"
		sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \
		cp php-fpm.d/www.conf.default php-fpm.d/www.conf; \
	else \
		# PHP 5.x don't use "include=" by default, so we'll create our own simple config that mimics PHP 7+ for consistency
		mkdir php-fpm.d; \
		cp php-fpm.conf.default php-fpm.d/www.conf; \
		{ \
			echo '[global]'; \
			echo 'include=etc/php-fpm.d/*.conf'; \
		} | tee php-fpm.conf; \
	fi \
	&& { \
		echo '[global]'; \
		echo 'error_log = /proc/self/fd/2'; \
		echo; \
		echo '[www]'; \
		echo '; if we send this to /proc/self/fd/1, it never appears'; \
		echo 'access.log = /proc/self/fd/2'; \
		echo; \
		echo 'clear_env = no'; \
		echo; \
		echo '; Ensure worker stdout and stderr are sent to the main error log.'; \
		echo 'catch_workers_output = yes'; \
	} | tee php-fpm.d/docker.conf \
	&& { \
		echo '[global]'; \
		echo 'daemonize = no'; \
		echo; \
		echo '[www]'; \
		echo 'listen = [::]:9000'; \
	} | tee php-fpm.d/zz-docker.conf


COPY ./docker-php-ext-* /usr/local/bin/
# Install PHP extensions
COPY ./ext/* /usr/local/lib/php/extensions/no-debug-non-zts-20131226/

# Install PHP extensions (OR docker-php-pecl-install)
#RUN pecl install /tmp/memcached.tgz
#RUN pecl install /tmp/memcache.tgz
#RUN pecl install /tmp/apcu.tgz
#RUN pecl install /tmp/msgpack.tgz
#RUN pecl install /tmp/xhprof.tgz
#RUN pecl install /tmp/xdebug.tgz
#RUN pecl install /tmp/mongo.tgz
#RUN pecl install /tmp/redis.tgz
#RUN pecl install /tmp/gearman.tgz
#RUN pecl install /tmp/swoole.tgz
RUN pecl install yaf

#RUN cd /home && tar -xvf /tmp/cphalcon.tgz && \
#    mv cphalcon-* phalcon && cd phalcon/build && ./install
#RUN cd /home && tar -xvf /tmp/node.tgz && \
#    mv node-* node && cd /usr/local/bin && ln -s /home/node/bin/* .
#RUN cd /home && git clone https://github.com/kjdev/php-ext-lz4.git && \
#    cd ./php-ext-lz4 && phpize && ./configure && make && make install
#RUN cd /home && git clone https://github.com/aerospike/aerospike-client-php.git && \
#    cd aerospike-client-php/src/aerospike && ./build.sh && make install
RUN cd /home && git clone http://git.qima-inc.com/platform/yz-swoole.git && \
    cd yz-swoole/swoole-extension && phpize && \
    ./configure  --enable-async-httpclient --enable-aerospike --enable-async-mysql --enable-sockets && \
    make && make install

# Install Composer
RUN cp /tmp/composer.phar /usr/local/bin/composer && chmod 755 /usr/local/bin/composer
RUN composer config -g repo.packagist composer https://packagist.phpcomposer.com \
    && composer global require "phpunit/phpunit:^5.2" \
    && composer global require "mockery/mockery:^0.9.4"
#ENV PATH /root/.composer/vendor/bin:$PATH
RUN ln -s /root/.composer/vendor/bin/phpunit /usr/bin/phpunit

# PHP config
COPY ./php.ini /usr/local/etc/php/php.ini
COPY ./php-fpm.conf /usr/local/etc/php-fpm.conf
COPY ./extension.ini /usr/local/etc/php/conf.d/extension.ini
COPY ./supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY ./entrypoint.sh /
RUN chmod +x /entrypoint.sh

# Write Permission
RUN usermod -u 1000 www-data

#ENTRYPOINT ["/entrypoint.sh"]

CMD ["php-fpm"]

WORKDIR /opt

VOLUME ["/opt","/var/log"]

EXPOSE 9000 9001 8000
